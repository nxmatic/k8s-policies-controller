apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: gcpworkload
    app.kubernetes.io/name: k8s-policies-controller
  name: gcpworkload-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: gcpworkload
      app.kubernetes.io/name: k8s-policies-controller
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/instance: gcpworkload
        app.kubernetes.io/name: k8s-policies-controller
    spec:
      containers:
      - args:
        - --zap-devel
        - --zap-log-level=debug
        - --kind=gcpworkload
        image: gcr.io/build-jx-prod/nuxeo/k8s-policies-controller:0.0.4-1-g06410a8-master
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /metrics
            port: metrics-server
        name: controller
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        - containerPort: 8080
          name: metrics-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics-server
            scheme: HTTP
        resources: {}
        securityContext: {}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
      securityContext: {}
      serviceAccountName: gcpworkload-controller
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: gcpworkload-controller-tls
